<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>gayLong</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://gaylong.club/"/>
  <updated>2020-02-01T14:05:29.429Z</updated>
  <id>http://gaylong.club/</id>
  
  <author>
    <name>tmsqte</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何root小米手机</title>
    <link href="http://gaylong.club/2020/02/01/%E5%A6%82%E4%BD%95root%E5%B0%8F%E7%B1%B3%E6%89%8B%E6%9C%BA/"/>
    <id>http://gaylong.club/2020/02/01/如何root小米手机/</id>
    <published>2020-02-01T08:31:12.000Z</published>
    <updated>2020-02-01T14:05:29.429Z</updated>
    
    <content type="html"><![CDATA[<p>#手把手教你如何root自己的手机</p><p>####由于我的手机是小米mix2s这里就以小米手机为例，教大家如何root自己的安卓手机</p><p>现在的手机root很方便只需点击手机管家，然后点击应用管理再打开右上角的权限就可以看见下面有权限管理。<br>如下图所示</p><p><img src="/2020/02/01/如何root小米手机/root1.jpg" alt="root1"></p><p><em>但是</em> 一般的手机点进来是只有前面三个选项，因为第四个选项只有开发版的系统才会显示</p><p><img src="/2020/02/01/如何root小米手机/system.png" alt="system"></p><p>所以我们只需将我们的系统版本由稳定版刷成开发版即可(以miui为例)</p><p>首先我们需要从官网上下载对应自己手机的开发版系统。百度搜索miui，点击下载，选择合适自己手机的系统，选择开发者版本点击下载。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#手把手教你如何root自己的手机&lt;/p&gt;
&lt;p&gt;####由于我的手机是小米mix2s这里就以小米手机为例，教大家如何root自己的安卓手机&lt;/p&gt;
&lt;p&gt;现在的手机root很方便只需点击手机管家，然后点击应用管理再打开右上角的权限就可以看见下面有权限管理。&lt;br&gt;如下图所
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://gaylong.club/2018/11/19/test/"/>
    <id>http://gaylong.club/2018/11/19/test/</id>
    <published>2018-11-19T01:30:53.000Z</published>
    <updated>2018-11-19T01:31:36.250Z</updated>
    
    <content type="html"><![CDATA[<p>###可视化实验设计</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###可视化实验设计&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>用python将数据导入excel文件中</title>
    <link href="http://gaylong.club/2018/09/21/%E7%94%A8python%E5%B0%86%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5excel%E6%96%87%E4%BB%B6%E4%B8%AD/"/>
    <id>http://gaylong.club/2018/09/21/用python将数据导入excel文件中/</id>
    <published>2018-09-21T12:04:34.000Z</published>
    <updated>2018-09-21T15:39:51.022Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前几天帮一个做数学建模的大佬编了一小段程序，算法、数据都是他计算好发给我的。本来这用c-就可以解决了，但是他还要求从excel中读写数据，所以我最终决定还是python大法好。"><a href="#前几天帮一个做数学建模的大佬编了一小段程序，算法、数据都是他计算好发给我的。本来这用c-就可以解决了，但是他还要求从excel中读写数据，所以我最终决定还是python大法好。" class="headerlink" title="前几天帮一个做数学建模的大佬编了一小段程序，算法、数据都是他计算好发给我的。本来这用c++就可以解决了，但是他还要求从excel中读写数据，所以我最终决定还是python大法好。"></a>前几天帮一个做数学建模的大佬编了一小段程序，算法、数据都是他计算好发给我的。本来这用c++就可以解决了，但是他还要求从excel中读写数据，所以我最终决定还是python大法好。</h4><a id="more"></a><h5 id="由于这个问题中涉及到二维数组的问题，而python中并没有直接定义二维数组这个概念，所以我们自己创建并初始化一个二维列表来充当二维数组"><a href="#由于这个问题中涉及到二维数组的问题，而python中并没有直接定义二维数组这个概念，所以我们自己创建并初始化一个二维列表来充当二维数组" class="headerlink" title="由于这个问题中涉及到二维数组的问题，而python中并没有直接定义二维数组这个概念，所以我们自己创建并初始化一个二维列表来充当二维数组"></a>由于这个问题中涉及到二维数组的问题，而python中并没有直接定义二维数组这个概念，所以我们自己创建并初始化一个二维列表来充当二维数组</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">nums = [] <span class="comment">#定义一个列表用于生成二维列表</span></span><br><span class="line">shuju = [] <span class="comment">#定义一个数据列表用于存入excel中</span></span><br><span class="line">rows = <span class="number">1646</span> <span class="comment">#二维列表的行数</span></span><br><span class="line">columns = <span class="number">1520</span> <span class="comment">#二维列表的列数</span></span><br><span class="line"><span class="comment">#用0初始化二维列表</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> range(rows):</span><br><span class="line">nums.append([])</span><br><span class="line"><span class="keyword">for</span> column <span class="keyword">in</span> range(columns):</span><br><span class="line">nums[row].append(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h5 id="往数组中填入数据"><a href="#往数组中填入数据" class="headerlink" title="往数组中填入数据"></a>往数组中填入数据</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> column <span class="keyword">in</span> range(columns): <span class="comment">#用循环将第0行全部赋值为48.08</span></span><br><span class="line">nums[<span class="number">0</span>][column] = <span class="number">48.08</span></span><br><span class="line"><span class="comment">#print nums[0][column]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> range(<span class="number">1</span>,rows): <span class="comment">#用循环将第0列所有行赋值为75</span></span><br><span class="line">nums[row][<span class="number">0</span>] = <span class="number">75</span></span><br></pre></td></tr></table></figure><h5 id="然后我们要从excel中获取一些数据来对矩阵进行初始化操作，所以这里我们先引入python中的xlrd模块"><a href="#然后我们要从excel中获取一些数据来对矩阵进行初始化操作，所以这里我们先引入python中的xlrd模块" class="headerlink" title="然后我们要从excel中获取一些数据来对矩阵进行初始化操作，所以这里我们先引入python中的xlrd模块"></a>然后我们要从excel中获取一些数据来对矩阵进行初始化操作，所以这里我们先引入python中的xlrd模块</h5><p>1、常用单元格中的数据类型<br>   0 empty,1 string（text）, 2 number, 3 date, 4 boolean, 5 error， 6 blank</p><p>2、导入模块<br>      import xlrd<br>3、打开Excel文件读取数据<br>       data = xlrd.open_workbook(filename)</p><hr><p>本文来自 echo_Ae 的CSDN 博客 ，全文地址请点击：<a href="https://blog.csdn.net/echo_ae/article/details/78693380?utm_source=copy" target="_blank" rel="noopener">https://blog.csdn.net/echo_ae/article/details/78693380?utm_source=copy</a> </p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#导入xlrd模块。xls文件read库，只能读。若写入，要用xlwt，意为:xls文件write写入库。可以实现指定表单、指定单元格的读取。</span></span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"></span><br><span class="line">file = <span class="string">'biao.xlsx'</span> <span class="comment">#excel文件名</span></span><br><span class="line">wb = xlrd.open_workbook(filename=file) <span class="comment">#打开excel文件获取数据</span></span><br><span class="line">ws = wb.sheet_by_name(<span class="string">'Sheet'</span>) <span class="comment">#通过名称获取表格对象</span></span><br><span class="line"></span><br><span class="line">j = <span class="number">1645</span> <span class="comment">#定义二维列表最后一行的下标</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">1647</span>): <span class="comment">#用循环将excel表中一列的数据读入到二维列表的最后一列</span></span><br><span class="line">nums[j][<span class="number">1519</span>] = ws.cell(i,<span class="number">1</span>).value</span><br><span class="line"><span class="comment">#print i</span></span><br><span class="line"><span class="comment">#print nums[j][1519]</span></span><br><span class="line">j = j<span class="number">-1</span></span><br><span class="line"><span class="comment">#print j</span></span><br><span class="line"><span class="comment">#print '\n'</span></span><br></pre></td></tr></table></figure><h5 id="接下来数组初始化完毕以后我们开始计算我们需要得到的结果"><a href="#接下来数组初始化完毕以后我们开始计算我们需要得到的结果" class="headerlink" title="接下来数组初始化完毕以后我们开始计算我们需要得到的结果"></a>接下来数组初始化完毕以后我们开始计算我们需要得到的结果</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#用循环计算数据的值</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,rows):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,columns<span class="number">-1</span>):</span><br><span class="line"><span class="comment">#D:nums[i][j],A:nums[i-1][j-1],B:nums[i-1][j],C:nums[i-1][j+1]</span></span><br><span class="line"><span class="comment">#D = 7.94e-3*(C+A)+B*(1-2*7.94e-3)</span></span><br><span class="line">nums[i][j] = <span class="number">7.94e-3</span>*float((nums[i<span class="number">-1</span>][j+<span class="number">1</span>]+nums[i<span class="number">-1</span>][j<span class="number">-1</span>]))+float(nums[i<span class="number">-1</span>][j])*float(<span class="number">1</span><span class="number">-2</span>*<span class="number">7.94e-3</span>)</span><br></pre></td></tr></table></figure><h5 id="到这里这个问题基本已经解决了，但是还有一个问题，我们需要把计算完的数据按照倒序存入excel表中。一开始我想用xlwt模块来实现将数据写入excel中，但是实际操作时却发现了这个模块的局限性。这个模块存入数据时最多只能存256列，可是我们需要存入一千多列。问了度娘后我发现网上的大神都是这么解决这个问题的。"><a href="#到这里这个问题基本已经解决了，但是还有一个问题，我们需要把计算完的数据按照倒序存入excel表中。一开始我想用xlwt模块来实现将数据写入excel中，但是实际操作时却发现了这个模块的局限性。这个模块存入数据时最多只能存256列，可是我们需要存入一千多列。问了度娘后我发现网上的大神都是这么解决这个问题的。" class="headerlink" title="到这里这个问题基本已经解决了，但是还有一个问题，我们需要把计算完的数据按照倒序存入excel表中。一开始我想用xlwt模块来实现将数据写入excel中，但是实际操作时却发现了这个模块的局限性。这个模块存入数据时最多只能存256列，可是我们需要存入一千多列。问了度娘后我发现网上的大神都是这么解决这个问题的。"></a>到这里这个问题基本已经解决了，但是还有一个问题，我们需要把计算完的数据按照倒序存入excel表中。一开始我想用xlwt模块来实现将数据写入excel中，但是实际操作时却发现了这个模块的局限性。这个模块存入数据时最多只能存256列，可是我们需要存入一千多列。问了度娘后我发现网上的大神都是这么解决这个问题的。</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding:utf8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_data_to_excel</span><span class="params">()</span>:</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">print</span> <span class="string">'开始生成'</span></span><br><span class="line">    wbk = xlwt.Workbook()</span><br><span class="line">    sheets = []</span><br><span class="line">    sheet = wbk.add_sheet(<span class="string">'Sheet1'</span>,cell_overwrite_ok=<span class="keyword">True</span>)</span><br><span class="line">    sheets.append(sheet)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">500</span>):</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'正在生成：第'</span>+str(i+<span class="number">1</span>)+<span class="string">'条数据 . . .'</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> xrange(<span class="number">769</span>):</span><br><span class="line">            <span class="comment">#计算第几个表</span></span><br><span class="line">            scount=j/<span class="number">256</span></span><br><span class="line">            <span class="comment">#如果表的个数少于该有的个数，则新建</span></span><br><span class="line">            <span class="keyword">if</span>(len(sheets) &lt;= scount):</span><br><span class="line">                sheets.append(wbk.add_sheet(<span class="string">'Sheet'</span>+str(scount+<span class="number">1</span>),cell_overwrite_ok=<span class="keyword">True</span>))</span><br><span class="line">            <span class="comment">#计算第几列，如果是256的倍数，序号应从0开始</span></span><br><span class="line">            col = j % <span class="number">256</span></span><br><span class="line">            sheets[scount].write(i,col,str(j))</span><br><span class="line">    wbk.save(<span class="string">'test.xls'</span>)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'生成成功'</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    write_data_to_excel()</span><br></pre></td></tr></table></figure><hr><p>本文来自 密斯特尔佳 的CSDN 博客 ，全文地址请点击：<a href="https://blog.csdn.net/u013608482/article/details/80942427?utm_source=copy" target="_blank" rel="noopener">https://blog.csdn.net/u013608482/article/details/80942427?utm_source=copy</a> </p><h5 id="即当写入的数据超过256列时就创建多张表。可是我又不想创建几张表，于是我解锁了新功能-python的csv模块。csv模块就完全没有上述问题，而且是python内置，简直是居家必备。"><a href="#即当写入的数据超过256列时就创建多张表。可是我又不想创建几张表，于是我解锁了新功能-python的csv模块。csv模块就完全没有上述问题，而且是python内置，简直是居家必备。" class="headerlink" title="即当写入的数据超过256列时就创建多张表。可是我又不想创建几张表，于是我解锁了新功能:python的csv模块。csv模块就完全没有上述问题，而且是python内置，简直是居家必备。"></a>即当写入的数据超过256列时就创建多张表。可是我又不想创建几张表，于是我解锁了新功能:python的csv模块。csv模块就完全没有上述问题，而且是python内置，简直是居家必备。</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Python处理csv文件</span><br><span class="line">CSV(Comma-Separated Values)即逗号分隔值，可以用Excel打开查看。由于是纯文本，任何编辑器也都可打开。与Excel文件不同，CSV文件中：</span><br><span class="line"></span><br><span class="line">值没有类型，所有值都是字符串</span><br><span class="line">不能指定字体颜色等样式</span><br><span class="line">不能指定单元格的宽高，不能合并单元格</span><br><span class="line">没有多个工作表</span><br><span class="line">不能嵌入图像图表</span><br><span class="line">在CSV文件中，以,作为分隔符，分隔两个单元格。像这样a,,c表示单元格a和单元格c之间有个空白的单元格。依此类推。</span><br><span class="line"></span><br><span class="line">不是每个逗号都表示单元格之间的分界。所以即使CSV是纯文本文件，也坚持使用专门的模块进行处理。Python内置了csv模块。</span><br></pre></td></tr></table></figure><h5 id="所以说了这么多其实在使用城市v、模块时只需要三行代码就可以把几千万个数据存入excel中了"><a href="#所以说了这么多其实在使用城市v、模块时只需要三行代码就可以把几千万个数据存入excel中了" class="headerlink" title="所以说了这么多其实在使用城市v、模块时只需要三行代码就可以把几千万个数据存入excel中了"></a>所以说了这么多其实在使用城市v、模块时只需要三行代码就可以把几千万个数据存入excel中了</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#import xlwt 由于用xlwt写入excel时，最多只能写入256列，无法存入所有数据。所以改用csv操作</span></span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="comment">#将nums的值按顺序存入shuju中</span></span><br><span class="line">k = <span class="number">1645</span> <span class="comment">#将nums的最后一行存入shuju的第一行</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> range(rows):</span><br><span class="line">shuju.append([])</span><br><span class="line"><span class="keyword">for</span> column <span class="keyword">in</span> range(columns):</span><br><span class="line">shuju[row].append(nums[k][column])</span><br><span class="line">k = k<span class="number">-1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#csv写入</span></span><br><span class="line"><span class="comment">#打开文件</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"shuju.csv"</span>,<span class="string">"wb"</span>) <span class="keyword">as</span> csvfile: </span><br><span class="line">    writer = csv.writer(csvfile)</span><br><span class="line"><span class="comment">#写入多行用writerows</span></span><br><span class="line">    writer.writerows(shuju)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前几天帮一个做数学建模的大佬编了一小段程序，算法、数据都是他计算好发给我的。本来这用c-就可以解决了，但是他还要求从excel中读写数据，所以我最终决定还是python大法好。&quot;&gt;&lt;a href=&quot;#前几天帮一个做数学建模的大佬编了一小段程序，算法、数据都是他计算好发给我的。本来这用c-就可以解决了，但是他还要求从excel中读写数据，所以我最终决定还是python大法好。&quot; class=&quot;headerlink&quot; title=&quot;前几天帮一个做数学建模的大佬编了一小段程序，算法、数据都是他计算好发给我的。本来这用c++就可以解决了，但是他还要求从excel中读写数据，所以我最终决定还是python大法好。&quot;&gt;&lt;/a&gt;前几天帮一个做数学建模的大佬编了一小段程序，算法、数据都是他计算好发给我的。本来这用c++就可以解决了，但是他还要求从excel中读写数据，所以我最终决定还是python大法好。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>说明</title>
    <link href="http://gaylong.club/2018/09/14/%E8%AF%B4%E6%98%8E/"/>
    <id>http://gaylong.club/2018/09/14/说明/</id>
    <published>2018-09-14T14:53:18.000Z</published>
    <updated>2018-09-18T02:21:47.975Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欢迎大家访问小龙的个人博客-以后这里就是我的小窝啦-希望大家多来看看我鸭。"><a href="#欢迎大家访问小龙的个人博客-以后这里就是我的小窝啦-希望大家多来看看我鸭。" class="headerlink" title="欢迎大家访问小龙的个人博客,以后这里就是我的小窝啦,希望大家多来看看我鸭。"></a>欢迎大家访问小龙的个人博客,以后这里就是我的小窝啦,希望大家多来看看我鸭。</h1><p>（这个博客暂时还未实现任何功能）</p> <a id="more"></a> <p><img src="/2018/09/14/说明/laugh.jpg" alt="滑稽"></p><h1 id="虽然功能没有"><a href="#虽然功能没有" class="headerlink" title="虽然功能没有"></a>虽然功能没有</h1><h2 id="但是本着既然来了就不能让dalao白来的原则"><a href="#但是本着既然来了就不能让dalao白来的原则" class="headerlink" title="但是本着既然来了就不能让dalao白来的原则"></a>但是本着既然来了就不能让dalao白来的原则</h2><h3 id="小弟在这粘一段从其他dalao抄来的以词云的方式统计微信好友情况的代码吧"><a href="#小弟在这粘一段从其他dalao抄来的以词云的方式统计微信好友情况的代码吧" class="headerlink" title="小弟在这粘一段从其他dalao抄来的以词云的方式统计微信好友情况的代码吧"></a>小弟在这粘一段从其他dalao抄来的以词云的方式统计微信好友情况的代码吧</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> itchat</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud, STOPWORDS, ImageColorGenerator</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="string">'''itchat.auto_login(hotReload = True)</span></span><br><span class="line"><span class="string">#  爬取自己好友的相关信息, 返回一个json文件</span></span><br><span class="line"><span class="string">friends = itchat.get_friends(update = True)[0:]'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_friends</span><span class="params">()</span>:</span></span><br><span class="line">itchat.login()</span><br><span class="line">text = dict()</span><br><span class="line">friends = itchat.get_friends(update = <span class="keyword">True</span>)</span><br><span class="line">male = <span class="string">"male"</span></span><br><span class="line">female = <span class="string">"female"</span></span><br><span class="line">other = <span class="string">"other"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> friends[<span class="number">1</span>:]:</span><br><span class="line">sex = i[<span class="string">'Sex'</span>]</span><br><span class="line"><span class="keyword">if</span> sex == <span class="number">1</span>:</span><br><span class="line">text[male] = text.get(male, <span class="number">0</span>) + <span class="number">1</span> <span class="comment">#dict.get(key,default)返回键的值, 若不存在则返回default</span></span><br><span class="line"><span class="keyword">elif</span> sex == <span class="number">2</span>:</span><br><span class="line">text[female] = text.get(female, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">text[other] = text.get(other, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">total = len(friends[<span class="number">1</span>:])</span><br><span class="line">print(<span class="string">"男性好友:  %.2f%%"</span> % (float(text[male]) / total *<span class="number">100</span>) + <span class="string">"\n"</span> + </span><br><span class="line">      <span class="string">"女性好友:  %.2f%%"</span> % (float(text[female]) / total *<span class="number">100</span>) + <span class="string">"\n"</span> +</span><br><span class="line">  <span class="string">"不明性别好友:  %.2f%%"</span> % (float(text[other]) / total *<span class="number">100</span>) )</span><br><span class="line"></span><br><span class="line">draw(text)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(datas)</span>:</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> datas.keys():</span><br><span class="line">plt.bar(key, datas[key])</span><br><span class="line"></span><br><span class="line">plt.legend()</span><br><span class="line">plt.xlabel(<span class="string">'sex'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'rate'</span>)</span><br><span class="line">plt.title(<span class="string">"Gender of Alfred's friends"</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_signature</span><span class="params">()</span>:</span></span><br><span class="line">itchat.auto_login(hotReload = <span class="keyword">True</span>)</span><br><span class="line">siglist = []</span><br><span class="line">friends = itchat.get_friends(update = <span class="keyword">True</span>)[<span class="number">1</span>:]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> friends:</span><br><span class="line">signature = i[<span class="string">"Signature"</span>].strip().replace(<span class="string">"span"</span>, <span class="string">""</span>).replace(<span class="string">"class"</span>, <span class="string">""</span>).replace(<span class="string">"emoji"</span>, <span class="string">""</span>)</span><br><span class="line">rep = re.compile(<span class="string">"1f\d+\w*|[&lt;&gt;/=]"</span>)</span><br><span class="line">signature = rep.sub(<span class="string">""</span>, signature)</span><br><span class="line">siglist.append(signature)</span><br><span class="line">text = <span class="string">""</span>.join(siglist)</span><br><span class="line"><span class="keyword">with</span> io.open(<span class="string">'text.txt'</span>, <span class="string">'w'</span>, encoding = <span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">wordlist = jieba.cut(text, cut_all = <span class="keyword">True</span>)</span><br><span class="line">word_space_split = <span class="string">" "</span>.join(wordlist)</span><br><span class="line">f.write(word_space_split)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw_signature</span><span class="params">()</span>:</span></span><br><span class="line">text = open(<span class="string">u'text.txt'</span>, encoding =<span class="string">'utf-8'</span>).read()</span><br><span class="line">coloring = np.array(Image.open(<span class="string">'jingqi_de_katong_dongwu-005.jpg'</span>))</span><br><span class="line">my_wordcloud = WordCloud(background_color = <span class="string">"white"</span>, max_words = <span class="number">2000</span>,</span><br><span class="line">                        mask = coloring, max_font_size = <span class="number">60</span>, random_state = <span class="number">42</span>, scale = <span class="number">2</span>,</span><br><span class="line">font_path = <span class="string">"DroidSansFallbackFull.ttf"</span>).generate(text)</span><br><span class="line">image_colors = ImageColorGenerator(coloring)</span><br><span class="line">plt.imshow(my_wordcloud.recolor(color_func = image_colors))</span><br><span class="line">plt.imshow(my_wordcloud)</span><br><span class="line">plt.axis(<span class="string">"off"</span>)</span><br><span class="line">plt.savefig(<span class="string">"D:/PyProgram/cloud.jpg"</span>, dpi = <span class="number">200</span>) <span class="comment"># 如果savefig放在plt.show()后面会造成保存空白图的问题</span></span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#parse_friends()</span></span><br><span class="line"><span class="comment">#parse_signature()</span></span><br><span class="line"><span class="comment">#draw_signature()</span></span><br></pre></td></tr></table></figure><h4 id="最后还是给大家劈个叉，祝各位晚安吧。"><a href="#最后还是给大家劈个叉，祝各位晚安吧。" class="headerlink" title="最后还是给大家劈个叉，祝各位晚安吧。"></a>最后还是给大家劈个叉，祝各位晚安吧。</h4><p><img src="/2018/09/14/说明/picha.jpg" alt="给各位dalao劈叉"></p><h5 id="未完待续…"><a href="#未完待续…" class="headerlink" title="未完待续…."></a>未完待续….</h5>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;欢迎大家访问小龙的个人博客-以后这里就是我的小窝啦-希望大家多来看看我鸭。&quot;&gt;&lt;a href=&quot;#欢迎大家访问小龙的个人博客-以后这里就是我的小窝啦-希望大家多来看看我鸭。&quot; class=&quot;headerlink&quot; title=&quot;欢迎大家访问小龙的个人博客,以后这里就是我的小窝啦,希望大家多来看看我鸭。&quot;&gt;&lt;/a&gt;欢迎大家访问小龙的个人博客,以后这里就是我的小窝啦,希望大家多来看看我鸭。&lt;/h1&gt;&lt;p&gt;（这个博客暂时还未实现任何功能）&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
